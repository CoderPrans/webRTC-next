{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/coder-prans/Desktop/develop.../web-chat/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Layout from '../components/layout.js';\nimport { useState, useEffect } from 'react';\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showbox = _useState4[0],\n      setShowbox = _useState4[1];\n\n  var doChatShit = function doChatShit() {\n    alert(\"Welcome \".concat(name));\n    setShowbox(false);\n  };\n\n  useEffect(function () {\n    console.log(location);\n    RTCinit();\n  });\n\n  function RTCinit() {\n    return _RTCinit.apply(this, arguments);\n  }\n\n  function _RTCinit() {\n    _RTCinit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var chatHash, configuration, pc, dataChannel, drone, roomName, room, sendSignalingMessage, startWebRTC;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              startWebRTC = function _ref4(isOfferer) {\n                console.log('Starting WebRTC in as', isOfferer ? 'offerer' : 'waiter');\n                pc = new RTCPeerConnection(configuration); // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n                // message to the other peer through the signaling server\n\n                pc.onicecandidate = function (event) {\n                  if (event.candidate) {\n                    sendSignalingMessage({\n                      candidate: event.candidate\n                    });\n                  }\n                };\n\n                if (isOfferer) {\n                  // If user is offerer let them create a negotiation offer and set up the data channel\n                  pc.onnegotiationneeded = function () {\n                    pc.createOffer(localDescCreated, function (error) {\n                      return console.error(error);\n                    });\n                  };\n\n                  dataChannel = pc.createDataChannel('chat');\n                  setupDataChannel();\n                } else {\n                  // If user is not the offerer let wait for a data channel\n                  pc.ondatachannel = function (event) {\n                    dataChannel = event.channel;\n                    setupDataChannel();\n                  };\n                }\n\n                startListentingToSignals();\n              };\n\n              sendSignalingMessage = function _ref3(message) {\n                drone.publish({\n                  room: roomName,\n                  message: message\n                });\n              };\n\n              if (!location.hash) {\n                location.hash = Math.floor(Math.random() * 0xffffff).toString(16);\n              }\n\n              chatHash = location.hash.substring(1);\n              configuration = {\n                iceServers: [{\n                  url: 'stun:stun.l.google.com:19302'\n                }]\n              }; // RTCPeerConnection\n\n              drone = new Scaledrone('c4l8B2ejDQcIBLKi');\n              roomName = \"observable-\".concat(chatHash);\n              // Wait for Scaledrone signaling server to connect\n              drone.on('open',\n              /*#__PURE__*/\n              function () {\n                var _ref = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2(error) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!error) {\n                            _context2.next = 2;\n                            break;\n                          }\n\n                          return _context2.abrupt(\"return\", console.error(error));\n\n                        case 2:\n                          room = drone.subscribe(roomName);\n                          room.on('open', function (error) {\n                            if (error) {\n                              return console.error(error);\n                            }\n\n                            console.log('Connected to signaling server');\n                          }); // We're connected to the room and received an array of 'members'\n                          // connected to the room (including us). Signaling server is ready.\n\n                          room.on('members',\n                          /*#__PURE__*/\n                          function () {\n                            var _ref2 = _asyncToGenerator(\n                            /*#__PURE__*/\n                            _regeneratorRuntime.mark(function _callee(members) {\n                              var isOfferer;\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      if (!(members.length >= 3)) {\n                                        _context.next = 2;\n                                        break;\n                                      }\n\n                                      return _context.abrupt(\"return\", alert('The room is full'));\n\n                                    case 2:\n                                      // If we are the second user to connect to the room we will be creating the offer\n                                      isOfferer = members.length === 2;\n                                      _context.next = 5;\n                                      return startWebRTC(isOfferer);\n\n                                    case 5:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee);\n                            }));\n\n                            return function (_x2) {\n                              return _ref2.apply(this, arguments);\n                            };\n                          }());\n\n                        case 5:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()); // Send signaling data via Scaledrone\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _RTCinit.apply(this, arguments);\n  }\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Welcome to Web-Chat\", !showbox && \", \".concat(name)), showbox && React.createElement(\"div\", {\n    className: \"jsx-2332887812\" + \" \" + \"welcome-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"your name ?\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      e.which === 13 ? doChatShit() : null;\n    },\n    value: name,\n    style: {\n      width: 130,\n      padding: '8px',\n      margin: '10px',\n      fontSize: 16,\n      borderRadius: 2,\n      border: '1px solid #DDD'\n    },\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: doChatShit,\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Enter\")), React.createElement(_JSXStyle, {\n    id: \"2332887812\",\n    __self: this\n  }, \"h1.jsx-2332887812{font-family:Arial;}button.jsx-2332887812{padding:8px;margin:0 10px;font-size:15px;font-style:bold;background-color:#4285f4;border-radius:3px;color:white;border:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NvZGVyLXByYW5zL0Rlc2t0b3AvZGV2ZWxvcC4uLi93ZWItY2hhdC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSWtCLEFBRzZCLEFBR04sWUFDRSxNQUhoQixRQUlpQixlQUNDLGdCQUNTLHlCQUNQLGtCQUNOLFlBQ0EsWUFDZCIsImZpbGUiOiIvaG9tZS9jb2Rlci1wcmFucy9EZXNrdG9wL2RldmVsb3AuLi4vd2ViLWNoYXQvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvbGF5b3V0LmpzJztcbmltcG9ydCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBJbmRleFBhZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IFtuYW1lLCBzZXROYW1lXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3Nob3dib3gsIHNldFNob3dib3hdID0gdXNlU3RhdGUodHJ1ZSk7XG5cbiAgY29uc3QgZG9DaGF0U2hpdCA9ICgpID0+IHtcbiAgICBhbGVydChgV2VsY29tZSAke25hbWV9YCk7XG4gICAgc2V0U2hvd2JveChmYWxzZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhsb2NhdGlvbik7XG4gICAgUlRDaW5pdCgpO1xuICB9KTtcblxuICBhc3luYyBmdW5jdGlvbiBSVENpbml0KCkge1xuICAgIGlmICghbG9jYXRpb24uaGFzaCkge1xuICAgICAgbG9jYXRpb24uaGFzaCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDB4ZmZmZmZmKS50b1N0cmluZygxNik7XG4gICAgfVxuICAgIGNvbnN0IGNoYXRIYXNoID0gbG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSk7XG5cbiAgICBjb25zdCBjb25maWd1cmF0aW9uID0ge1xuICAgICAgaWNlU2VydmVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgdXJsOiAnc3R1bjpzdHVuLmwuZ29vZ2xlLmNvbToxOTMwMicsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gICAgLy8gUlRDUGVlckNvbm5lY3Rpb25cbiAgICBsZXQgcGM7XG4gICAgLy8gUlRDRGF0YUNoYW5uZWxcbiAgICBsZXQgZGF0YUNoYW5uZWw7XG5cbiAgICBjb25zdCBkcm9uZSA9IG5ldyBTY2FsZWRyb25lKCdjNGw4QjJlakRRY0lCTEtpJyk7XG5cbiAgICBjb25zdCByb29tTmFtZSA9IGBvYnNlcnZhYmxlLSR7Y2hhdEhhc2h9YDtcblxuICAgIGxldCByb29tO1xuXG4gICAgLy8gV2FpdCBmb3IgU2NhbGVkcm9uZSBzaWduYWxpbmcgc2VydmVyIHRvIGNvbm5lY3RcbiAgICBkcm9uZS5vbignb3BlbicsIGFzeW5jIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfVxuICAgICAgcm9vbSA9IGRyb25lLnN1YnNjcmliZShyb29tTmFtZSk7XG4gICAgICByb29tLm9uKCdvcGVuJywgZXJyb3IgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBzaWduYWxpbmcgc2VydmVyJyk7XG4gICAgICB9KTtcbiAgICAgIC8vIFdlJ3JlIGNvbm5lY3RlZCB0byB0aGUgcm9vbSBhbmQgcmVjZWl2ZWQgYW4gYXJyYXkgb2YgJ21lbWJlcnMnXG4gICAgICAvLyBjb25uZWN0ZWQgdG8gdGhlIHJvb20gKGluY2x1ZGluZyB1cykuIFNpZ25hbGluZyBzZXJ2ZXIgaXMgcmVhZHkuXG4gICAgICByb29tLm9uKCdtZW1iZXJzJywgYXN5bmMgZnVuY3Rpb24obWVtYmVycykge1xuICAgICAgICBpZiAobWVtYmVycy5sZW5ndGggPj0gMykge1xuICAgICAgICAgIHJldHVybiBhbGVydCgnVGhlIHJvb20gaXMgZnVsbCcpO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHdlIGFyZSB0aGUgc2Vjb25kIHVzZXIgdG8gY29ubmVjdCB0byB0aGUgcm9vbSB3ZSB3aWxsIGJlIGNyZWF0aW5nIHRoZSBvZmZlclxuICAgICAgICBjb25zdCBpc09mZmVyZXIgPSBtZW1iZXJzLmxlbmd0aCA9PT0gMjtcbiAgICAgICAgYXdhaXQgc3RhcnRXZWJSVEMoaXNPZmZlcmVyKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gU2VuZCBzaWduYWxpbmcgZGF0YSB2aWEgU2NhbGVkcm9uZVxuICAgIGZ1bmN0aW9uIHNlbmRTaWduYWxpbmdNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgIGRyb25lLnB1Ymxpc2goe1xuICAgICAgICByb29tOiByb29tTmFtZSxcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN0YXJ0V2ViUlRDKGlzT2ZmZXJlcikge1xuICAgICAgY29uc29sZS5sb2coJ1N0YXJ0aW5nIFdlYlJUQyBpbiBhcycsIGlzT2ZmZXJlciA/ICdvZmZlcmVyJyA6ICd3YWl0ZXInKTtcbiAgICAgIHBjID0gbmV3IFJUQ1BlZXJDb25uZWN0aW9uKGNvbmZpZ3VyYXRpb24pO1xuXG4gICAgICAvLyAnb25pY2VjYW5kaWRhdGUnIG5vdGlmaWVzIHVzIHdoZW5ldmVyIGFuIElDRSBhZ2VudCBuZWVkcyB0byBkZWxpdmVyIGFcbiAgICAgIC8vIG1lc3NhZ2UgdG8gdGhlIG90aGVyIHBlZXIgdGhyb3VnaCB0aGUgc2lnbmFsaW5nIHNlcnZlclxuICAgICAgcGMub25pY2VjYW5kaWRhdGUgPSBldmVudCA9PiB7XG4gICAgICAgIGlmIChldmVudC5jYW5kaWRhdGUpIHtcbiAgICAgICAgICBzZW5kU2lnbmFsaW5nTWVzc2FnZSh7Y2FuZGlkYXRlOiBldmVudC5jYW5kaWRhdGV9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKGlzT2ZmZXJlcikge1xuICAgICAgICAvLyBJZiB1c2VyIGlzIG9mZmVyZXIgbGV0IHRoZW0gY3JlYXRlIGEgbmVnb3RpYXRpb24gb2ZmZXIgYW5kIHNldCB1cCB0aGUgZGF0YSBjaGFubmVsXG4gICAgICAgIHBjLm9ubmVnb3RpYXRpb25uZWVkZWQgPSAoKSA9PiB7XG4gICAgICAgICAgcGMuY3JlYXRlT2ZmZXIobG9jYWxEZXNjQ3JlYXRlZCwgZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICAgICAgICB9O1xuICAgICAgICBkYXRhQ2hhbm5lbCA9IHBjLmNyZWF0ZURhdGFDaGFubmVsKCdjaGF0Jyk7XG4gICAgICAgIHNldHVwRGF0YUNoYW5uZWwoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIHVzZXIgaXMgbm90IHRoZSBvZmZlcmVyIGxldCB3YWl0IGZvciBhIGRhdGEgY2hhbm5lbFxuICAgICAgICBwYy5vbmRhdGFjaGFubmVsID0gZXZlbnQgPT4ge1xuICAgICAgICAgIGRhdGFDaGFubmVsID0gZXZlbnQuY2hhbm5lbDtcbiAgICAgICAgICBzZXR1cERhdGFDaGFubmVsKCk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHN0YXJ0TGlzdGVudGluZ1RvU2lnbmFscygpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxoMT5XZWxjb21lIHRvIFdlYi1DaGF0eyFzaG93Ym94ICYmIGAsICR7bmFtZX1gfTwvaDE+XG4gICAgICB7c2hvd2JveCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwid2VsY29tZS1ib3hcIj5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwieW91ciBuYW1lID9cIlxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0TmFtZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBvbktleVByZXNzPXtlID0+IHtcbiAgICAgICAgICAgICAgZS53aGljaCA9PT0gMTMgPyBkb0NoYXRTaGl0KCkgOiBudWxsO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHZhbHVlPXtuYW1lfVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgd2lkdGg6IDEzMCxcbiAgICAgICAgICAgICAgcGFkZGluZzogJzhweCcsXG4gICAgICAgICAgICAgIG1hcmdpbjogJzEwcHgnLFxuICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgIGJvcmRlclJhZGl1czogMixcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNEREQnLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17ZG9DaGF0U2hpdH0+RW50ZXI8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICAgICAgICB9XG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgICAgIG1hcmdpbjogMCAxMHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgICBmb250LXN0eWxlOiBib2xkO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0Mjg1ZjQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4UGFnZTtcbiJdfQ== */\\n/*@ sourceURL=/home/coder-prans/Desktop/develop.../web-chat/pages/index.js */\"));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/coder-prans/Desktop/develop.../web-chat/pages/index.js"],"names":["Layout","useState","useEffect","IndexPage","name","setName","showbox","setShowbox","doChatShit","alert","console","log","location","RTCinit","sendSignalingMessage","startWebRTC","isOfferer","pc","RTCPeerConnection","configuration","onicecandidate","event","candidate","onnegotiationneeded","createOffer","localDescCreated","error","dataChannel","createDataChannel","setupDataChannel","ondatachannel","channel","startListentingToSignals","message","drone","publish","room","roomName","hash","Math","floor","random","toString","chatHash","substring","iceServers","url","Scaledrone","on","subscribe","members","length","e","target","value","which","width","padding","margin","fontSize","borderRadius","border"],"mappings":"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","sourcesContent":["import Layout from '../components/layout.js';\nimport {useState, useEffect} from 'react';\n\nconst IndexPage = () => {\n  const [name, setName] = useState('');\n  const [showbox, setShowbox] = useState(true);\n\n  const doChatShit = () => {\n    alert(`Welcome ${name}`);\n    setShowbox(false);\n  };\n\n  useEffect(() => {\n    console.log(location);\n    RTCinit();\n  });\n\n  async function RTCinit() {\n    if (!location.hash) {\n      location.hash = Math.floor(Math.random() * 0xffffff).toString(16);\n    }\n    const chatHash = location.hash.substring(1);\n\n    const configuration = {\n      iceServers: [\n        {\n          url: 'stun:stun.l.google.com:19302',\n        },\n      ],\n    };\n    // RTCPeerConnection\n    let pc;\n    // RTCDataChannel\n    let dataChannel;\n\n    const drone = new Scaledrone('c4l8B2ejDQcIBLKi');\n\n    const roomName = `observable-${chatHash}`;\n\n    let room;\n\n    // Wait for Scaledrone signaling server to connect\n    drone.on('open', async function(error) {\n      if (error) {\n        return console.error(error);\n      }\n      room = drone.subscribe(roomName);\n      room.on('open', error => {\n        if (error) {\n          return console.error(error);\n        }\n        console.log('Connected to signaling server');\n      });\n      // We're connected to the room and received an array of 'members'\n      // connected to the room (including us). Signaling server is ready.\n      room.on('members', async function(members) {\n        if (members.length >= 3) {\n          return alert('The room is full');\n        }\n        // If we are the second user to connect to the room we will be creating the offer\n        const isOfferer = members.length === 2;\n        await startWebRTC(isOfferer);\n      });\n    });\n\n    // Send signaling data via Scaledrone\n    function sendSignalingMessage(message) {\n      drone.publish({\n        room: roomName,\n        message,\n      });\n    }\n\n    function startWebRTC(isOfferer) {\n      console.log('Starting WebRTC in as', isOfferer ? 'offerer' : 'waiter');\n      pc = new RTCPeerConnection(configuration);\n\n      // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n      // message to the other peer through the signaling server\n      pc.onicecandidate = event => {\n        if (event.candidate) {\n          sendSignalingMessage({candidate: event.candidate});\n        }\n      };\n\n      if (isOfferer) {\n        // If user is offerer let them create a negotiation offer and set up the data channel\n        pc.onnegotiationneeded = () => {\n          pc.createOffer(localDescCreated, error => console.error(error));\n        };\n        dataChannel = pc.createDataChannel('chat');\n        setupDataChannel();\n      } else {\n        // If user is not the offerer let wait for a data channel\n        pc.ondatachannel = event => {\n          dataChannel = event.channel;\n          setupDataChannel();\n        };\n      }\n\n      startListentingToSignals();\n    }\n  }\n\n  return (\n    <Layout>\n      <h1>Welcome to Web-Chat{!showbox && `, ${name}`}</h1>\n      {showbox && (\n        <div className=\"welcome-box\">\n          <input\n            placeholder=\"your name ?\"\n            onChange={e => setName(e.target.value)}\n            onKeyPress={e => {\n              e.which === 13 ? doChatShit() : null;\n            }}\n            value={name}\n            style={{\n              width: 130,\n              padding: '8px',\n              margin: '10px',\n              fontSize: 16,\n              borderRadius: 2,\n              border: '1px solid #DDD',\n            }}\n          />\n          <br />\n          <button onClick={doChatShit}>Enter</button>\n        </div>\n      )}\n      <style jsx>{`\n        h1 {\n          font-family: Arial;\n        }\n        button {\n          padding: 8px;\n          margin: 0 10px;\n          font-size: 15px;\n          font-style: bold;\n          background-color: #4285f4;\n          border-radius: 3px;\n          color: white;\n          border: none;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}