{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/coder-prans/Desktop/develop.../web-chat/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Layout from '../components/layout.js';\nimport { useState, useEffect } from 'react';\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showbox = _useState4[0],\n      setShowbox = _useState4[1];\n\n  var doChatShit = function doChatShit() {\n    alert(\"Welcome \".concat(name));\n    setShowbox(false);\n  };\n\n  useEffect(function () {\n    console.log(location);\n    RTCinit();\n  });\n\n  function RTCinit() {\n    if (!location.hash) {\n      location.hash = Math.floor(Math.random() * 0xffffff).toString(16);\n    }\n\n    var chatHash = location.hash.substring(1);\n    var configuration = {\n      iceServers: [{\n        url: 'stun:stun.l.google.com:19302'\n      }]\n    }; // RTCPeerConnection\n\n    var pc; // RTCDataChannel\n\n    var dataChannel;\n    var drone = new Scaledrone('c4l8B2ejDQcIBLKi');\n    var roomName = \"observable-\".concat(chatHash);\n    var room; // Wait for Scaledrone signaling server to connect\n\n    drone.on('open', function (error) {\n      if (error) {\n        return console.error(error);\n      }\n\n      room = drone.subscribe(roomName);\n      room.on('open', function (error) {\n        if (error) {\n          return console.error(error);\n        }\n\n        console.log('Connected to signaling server');\n      }); // We're connected to the room and received an array of 'members'\n      // connected to the room (including us). Signaling server is ready.\n\n      room.on('members', function (members) {\n        if (members.length >= 3) {\n          return alert('The room is full');\n        } // If we are the second user to connect to the room we will be creating the offer\n\n\n        var isOfferer = members.length === 2;\n        startWebRTC(isOfferer);\n      });\n    }); // Send signaling data via Scaledrone\n\n    function sendSignalingMessage(message) {\n      drone.publish({\n        room: roomName,\n        message: message\n      });\n    }\n\n    function startWebRTC(isOfferer) {\n      console.log('Starting WebRTC in as', isOfferer ? 'offerer' : 'waiter');\n      pc = new RTCPeerConnection(configuration); // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n      // message to the other peer through the signaling server\n\n      pc.onicecandidate = function (event) {\n        if (event.candidate) {\n          sendSignalingMessage({\n            candidate: event.candidate\n          });\n        }\n      };\n\n      if (isOfferer) {\n        // If user is offerer let them create a negotiation offer and set up the data channel\n        pc.onnegotiationneeded = function () {\n          pc.createOffer(localDescCreated, function (error) {\n            return console.error(error);\n          });\n        };\n\n        dataChannel = pc.createDataChannel('chat');\n        setupDataChannel();\n      } else {\n        // If user is not the offerer let wait for a data channel\n        pc.ondatachannel = function (event) {\n          dataChannel = event.channel;\n          setupDataChannel();\n        };\n      }\n\n      startListentingToSignals();\n    }\n\n    function setupDataChannel() {\n      checkDataChannelState();\n      dataChannel.onopen = checkDataChannelState;\n      dataChannel.onclose = checkDataChannelState;\n\n      dataChannel.onmessage = function (event) {\n        return insertMessageToDOM(JSON.parse(event.data), false);\n      };\n    }\n\n    function checkDataChannelState() {\n      console.log('WebRTC channel state is:', dataChannel.readyState);\n\n      if (dataChannel.readyState === 'open') {\n        insertMessageToDOM({\n          content: 'WebRTC data channel is now open'\n        });\n      }\n    }\n\n    function startListentingToSignals() {\n      // Listen to signaling data from Scaledrone\n      room.on('data', function (message, client) {\n        // Message was sent by us\n        if (client.id === drone.clientId) {\n          return;\n        }\n\n        if (message.sdp) {\n          // This is called after receiving an offer or answer from another peer\n          pc.setRemoteDescription(new RTCSessionDescription(message.sdp), function () {\n            console.log('pc.remoteDescription.type', pc.remoteDescription.type); // When receiving an offer lets answer it\n\n            if (pc.remoteDescription.type === 'offer') {\n              console.log('Answering offer');\n              pc.createAnswer(localDescCreated, function (error) {\n                return console.error(error);\n              });\n            }\n          }, function (error) {\n            return console.error(error);\n          });\n        } else if (message.candidate) {\n          // Add the new ICE candidate to our connections remote description\n          pc.addIceCandidate(new RTCIceCandidate(message.candidate));\n        }\n      });\n    }\n  }\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Welcome to Web-Chat\", !showbox && \", \".concat(name)), showbox && React.createElement(\"div\", {\n    className: \"jsx-2332887812\" + \" \" + \"welcome-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"your name ?\",\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      e.which === 13 ? doChatShit() : null;\n    },\n    value: name,\n    style: {\n      width: 130,\n      padding: '8px',\n      margin: '10px',\n      fontSize: 16,\n      borderRadius: 2,\n      border: '1px solid #DDD'\n    },\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: doChatShit,\n    className: \"jsx-2332887812\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Enter\")), React.createElement(_JSXStyle, {\n    id: \"2332887812\",\n    __self: this\n  }, \"h1.jsx-2332887812{font-family:Arial;}button.jsx-2332887812{padding:8px;margin:0 10px;font-size:15px;font-style:bold;background-color:#4285f4;border-radius:3px;color:white;border:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/coder-prans/Desktop/develop.../web-chat/pages/index.js */\"));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/coder-prans/Desktop/develop.../web-chat/pages/index.js"],"names":["Layout","useState","useEffect","IndexPage","name","setName","showbox","setShowbox","doChatShit","alert","console","log","location","RTCinit","hash","Math","floor","random","toString","chatHash","substring","configuration","iceServers","url","pc","dataChannel","drone","Scaledrone","roomName","room","on","error","subscribe","members","length","isOfferer","startWebRTC","sendSignalingMessage","message","publish","RTCPeerConnection","onicecandidate","event","candidate","onnegotiationneeded","createOffer","localDescCreated","createDataChannel","setupDataChannel","ondatachannel","channel","startListentingToSignals","checkDataChannelState","onopen","onclose","onmessage","insertMessageToDOM","JSON","parse","data","readyState","content","client","id","clientId","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","addIceCandidate","RTCIceCandidate","e","target","value","which","width","padding","margin","fontSize","borderRadius","border"],"mappings":"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","sourcesContent":["import Layout from '../components/layout.js';\nimport {useState, useEffect} from 'react';\n\nconst IndexPage = () => {\n  const [name, setName] = useState('');\n  const [showbox, setShowbox] = useState(true);\n\n  const doChatShit = () => {\n    alert(`Welcome ${name}`);\n    setShowbox(false);\n  };\n\n  useEffect(() => {\n    console.log(location);\n    RTCinit();\n  });\n\n  function RTCinit() {\n    if (!location.hash) {\n      location.hash = Math.floor(Math.random() * 0xffffff).toString(16);\n    }\n    const chatHash = location.hash.substring(1);\n\n    const configuration = {\n      iceServers: [\n        {\n          url: 'stun:stun.l.google.com:19302',\n        },\n      ],\n    };\n    // RTCPeerConnection\n    let pc;\n    // RTCDataChannel\n    let dataChannel;\n\n    const drone = new Scaledrone('c4l8B2ejDQcIBLKi');\n\n    const roomName = `observable-${chatHash}`;\n\n    let room;\n\n    // Wait for Scaledrone signaling server to connect\n    drone.on('open', function(error) {\n      if (error) {\n        return console.error(error);\n      }\n      room = drone.subscribe(roomName);\n      room.on('open', error => {\n        if (error) {\n          return console.error(error);\n        }\n        console.log('Connected to signaling server');\n      });\n      // We're connected to the room and received an array of 'members'\n      // connected to the room (including us). Signaling server is ready.\n      room.on('members', function(members) {\n        if (members.length >= 3) {\n          return alert('The room is full');\n        }\n        // If we are the second user to connect to the room we will be creating the offer\n        const isOfferer = members.length === 2;\n        startWebRTC(isOfferer);\n      });\n    });\n\n    // Send signaling data via Scaledrone\n    function sendSignalingMessage(message) {\n      drone.publish({\n        room: roomName,\n        message,\n      });\n    }\n\n    function startWebRTC(isOfferer) {\n      console.log('Starting WebRTC in as', isOfferer ? 'offerer' : 'waiter');\n      pc = new RTCPeerConnection(configuration);\n\n      // 'onicecandidate' notifies us whenever an ICE agent needs to deliver a\n      // message to the other peer through the signaling server\n      pc.onicecandidate = event => {\n        if (event.candidate) {\n          sendSignalingMessage({candidate: event.candidate});\n        }\n      };\n\n      if (isOfferer) {\n        // If user is offerer let them create a negotiation offer and set up the data channel\n        pc.onnegotiationneeded = () => {\n          pc.createOffer(localDescCreated, error => console.error(error));\n        };\n        dataChannel = pc.createDataChannel('chat');\n        setupDataChannel();\n      } else {\n        // If user is not the offerer let wait for a data channel\n        pc.ondatachannel = event => {\n          dataChannel = event.channel;\n          setupDataChannel();\n        };\n      }\n\n      startListentingToSignals();\n    }\n\n    function setupDataChannel() {\n      checkDataChannelState();\n      dataChannel.onopen = checkDataChannelState;\n      dataChannel.onclose = checkDataChannelState;\n      dataChannel.onmessage = event =>\n        insertMessageToDOM(JSON.parse(event.data), false);\n    }\n\n    function checkDataChannelState() {\n      console.log('WebRTC channel state is:', dataChannel.readyState);\n      if (dataChannel.readyState === 'open') {\n        insertMessageToDOM({content: 'WebRTC data channel is now open'});\n      }\n    }\n    function startListentingToSignals() {\n      // Listen to signaling data from Scaledrone\n      room.on('data', (message, client) => {\n        // Message was sent by us\n        if (client.id === drone.clientId) {\n          return;\n        }\n        if (message.sdp) {\n          // This is called after receiving an offer or answer from another peer\n          pc.setRemoteDescription(\n            new RTCSessionDescription(message.sdp),\n            () => {\n              console.log(\n                'pc.remoteDescription.type',\n                pc.remoteDescription.type,\n              );\n              // When receiving an offer lets answer it\n              if (pc.remoteDescription.type === 'offer') {\n                console.log('Answering offer');\n                pc.createAnswer(localDescCreated, error =>\n                  console.error(error),\n                );\n              }\n            },\n            error => console.error(error),\n          );\n        } else if (message.candidate) {\n          // Add the new ICE candidate to our connections remote description\n          pc.addIceCandidate(new RTCIceCandidate(message.candidate));\n        }\n      });\n    }\n  }\n\n  return (\n    <Layout>\n      <h1>Welcome to Web-Chat{!showbox && `, ${name}`}</h1>\n      {showbox && (\n        <div className=\"welcome-box\">\n          <input\n            placeholder=\"your name ?\"\n            onChange={e => setName(e.target.value)}\n            onKeyPress={e => {\n              e.which === 13 ? doChatShit() : null;\n            }}\n            value={name}\n            style={{\n              width: 130,\n              padding: '8px',\n              margin: '10px',\n              fontSize: 16,\n              borderRadius: 2,\n              border: '1px solid #DDD',\n            }}\n          />\n          <br />\n          <button onClick={doChatShit}>Enter</button>\n        </div>\n      )}\n      <style jsx>{`\n        h1 {\n          font-family: Arial;\n        }\n        button {\n          padding: 8px;\n          margin: 0 10px;\n          font-size: 15px;\n          font-style: bold;\n          background-color: #4285f4;\n          border-radius: 3px;\n          color: white;\n          border: none;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}